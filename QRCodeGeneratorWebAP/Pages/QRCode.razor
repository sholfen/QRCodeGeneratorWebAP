@page "/"
@using Blazored.LocalStorage;
@using QRCodeGeneratorWebAP.Data
@inject WeatherForecastService ForecastService
@inject QRCodeAppService qRCodeAppService
@inject ILocalStorageService localstorage

<h3>QRCode</h3>

<input type="text" @bind-value="input" /><br />
<button class="btn btn-primary" @onclick="async (e) => await this.GenerateQRCode(e)">Generate QRCode</button>
<br />
<span>@message</span>
<br />
<img src="@imageData" />
<br />
<span>@imageData</span>

@code {
    private int currentCount = 0;
    private string imageData = string.Empty;
    private string input = string.Empty;
    private string message = string.Empty;

    private async Task GenerateQRCode(MouseEventArgs e)//https://www.codeproject.com/Articles/5276310/Async-Programming-in-Blazor
    {
        message = "處理中";
        imageData = await qRCodeAppService.GetQRCodeImgString(input);

        List<QRCodeData> list = await localstorage.GetItemAsync<List<QRCodeData>>(QRCodeData.KEY);
        if (list == null)
        {
            list = new List<QRCodeData>();
        }
        list.Add(new QRCodeData { URL = input, ImagStr = imageData });
        await localstorage.SetItemAsync<List<QRCodeData>>(QRCodeData.KEY, list);
        message = "完成";
        input = string.Empty;
    }
}
